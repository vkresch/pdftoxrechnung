name: CI

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
      - v*

jobs:
  linter:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install black
      run: pip install black==24.4.2

    - name: Check black format 
      run:  black --check --diff .

  tests:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install -r backend/requirements.txt
        pip install --upgrade pyautogui
    
    - name: Install extra dependencies
      run: |
        pip install --upgrade python-xlib
  
    - name: Install Chrome
      run: |
        sudo apt install google-chrome-stable
    
    - name: Check the console scripts interface
      run: |
        seleniumbase
        sbase
    
    - name: Install chromedriver
      run: |
        seleniumbase install chromedriver
        seleniumbase install uc_driver
        
    - name: Check which Chrome binaries exist
      run: |
        python -c "import os; print(os.path.exists('/usr/bin/google-chrome'))"
        python -c "import os; print(os.path.exists('/bin/google-chrome-stable'))"
        python -c "import os; print(os.path.exists('/bin/chromium-browser'))"
        python -c "import os; print(os.path.exists('/bin/chromium'))"
    
    - name: Display Chrome binary that's used
      run: |
        python -c "from seleniumbase.core import detect_b_ver; print(detect_b_ver.get_binary_location('google-chrome'))"
        python -c "from seleniumbase import undetected; print(undetected.find_chrome_executable())"

    - name: Run tests
      env:
        DEEPSEEK_MAIL: ${{ secrets.DEEPSEEK_MAIL }}
        DEEPSEEK_PASSWORD: ${{ secrets.DEEPSEEK_PASSWORD }}
      run: python -m pytest backend/ -vv

    - name: Upload Logs
      uses: actions/upload-artifact@v4
      with:
        name: screenshots
        path: screenshots/
        retention-days: 7
